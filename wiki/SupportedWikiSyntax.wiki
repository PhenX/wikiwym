#summary This page demonstrates the supported parser features.
#labels Featured

= Introduction =

This page demonstrates the various wiki markup which is working (or believed to be working) in the [http://code.google.com/p/wikiwym/source/browse/trunk/lib/GoogleCodeWikiParser.js current parser code].

For testing purposes, this page gets programmatically pulled down to a development machine and processed using [http://code.google.com/p/wikiwym/source/browse/trunk/lib/GoogleCodeWikiParser.js GoogleCodeWikiParser.js]. Last i checked, all of the tags demonstrated on this page work as they do in !GoCo (perhaps with minor layout/spacing differences).

The goal is not to achieve 100% compatibility with !GoCo, but to have a tool which can be used to provide a reasonably accurate preview of a !GoCo-formatted page before committing it to a !GoCo-hosted project's source code repository. It "could" be used as the bases of a standalone wiki implementation, but that's not the goal.

A good way to get a feel for what this code can and cannot do is to browse your own wiki pages with it:

  * [http://fossil.wanderinghorse.net/demos/wikiwym/]

From there you can browse the wiki pages from any Google Code project which has wiki pages in its Subversion repository, and they will be rendered by this code. You can also use it as an editor, including a preview, and then copy/paste the changes back into Google Code when you're happy with them.


=Wiki-style Links=

Wiki-words are _not_ linked by default - only those in `[ThisSyntax]` or `[ThisSyntax label string]` are handled. e.g. [HomePage] gets linked but HomePage does not. Remote URLs are also handled only if they are bracketed (e.g. [http://code.google.com/p/v8-juice]).

Images are also handled:

Without a link:
`[http://s11n.net/img/logo/logo.lightblue.jpg]`

[http://s11n.net/img/logo/logo.lightblue.jpg]

With a link:
`[http://s11n.net http://s11n.net/img/logo/logo.lightblue.jpg]`

[http://s11n.net http://s11n.net/img/logo/logo.lightblue.jpg]


=Source code blocks=

{{{
if( (i < 10) && (i > 1) ) {
    print("hi, world!");
}
}}}

=Block Quotes=

Someone once said:

  This sentence will be quoted in the future as the canonical example
  of a quote that is so important that it should be visually separate
  from the rest of the text in which it appears.

=Lists=

As of r140, nested lists are supported.

  * Item is _emphasized_.
    * Item is *bold*.
    * Item is *_emphasized bold_*.
  * Item is `backticked`.

  # Item is ~~stricken~~.
    # Item is ,,subscripted,,.
    # Item is ^superscripted^.
      * Item is ~~*stricken boldly*~~.
      # Item is *~~boldly stricken~~* (and is different list type than its neighbors).
      * Item is _*~~boldly stricken with emphasis~~*_.
  # Do `<backticks block parsing of <`? (works as of r35)
  # Can we *`bold backticked data`*? Of course. But not if we do `*asterisk inside the backticks*`.


=Tables=

|| cell 0,0 || ,,cell 1,0,, || ^cell 2,0^ ||
|| ~~*cell 0,1*~~ || ~~cell 1,1~~ || _cell 2,1_ ||
|| ^*cell 0,2*^ (LOL! !GoCo doesn't handle superscripted bold, but our parser does) || cell 1,2 || *cell 2,2* ||

=Misc.=

The HR element is represented by `----` on a line by its own:
----

=Missing=

 * Gadgets and other features which require Google or browser-level infrastructure (since the parser is not tied to browser environments).